import { CONFIG } from "../../../Service/CONFIG";
import { put, call } from "redux-saga/effects";
import * as actions from "../../action/index";
import axios from "axios";
export function* AddPentestFindings(action) {
  try {
    const { data, pentestId } = action.payload;
    let response = yield call(
      axios.post,
      `/pentest/${pentestId}/findings/pentestActiveFindings/newFinding`,
      data
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "files");
      yield put(actions.addFindingsSuccess("success"));
      yield put(actions.getPentestTabDetailsRequest(pentestId));
    }
  } catch (error) {
    // console.log(error.response.data.message);
    yield put(actions.addFindingsError(error.response.data.message));
  }
}
export function* deleteFindings(action) {
  try {
    const { pentestId, seletedId } = action.payload;
    let response = yield call(
      axios.delete,
      `/pentest/${pentestId}/findings/deleteFinding`,
      {
        data: {
          findingId: seletedId,
        },
      }
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "files");
      yield put(actions.deleteFindingsSuccess("success"));
      yield put(actions.getPentestTabDetailsRequest(pentestId));
    }
  } catch (error) {
    // console.log(error.response.data.message);
    yield put(actions.deleteFindingsError(error.response.data.message));
  }
}
export function* updateFindings(action) {
  try {
    const { pentestId, seletedId, data } = action.payload;
    let response = yield call(
      axios.put,
      `/pentest/${pentestId}/${seletedId}/findings/pentestActiveFindings/editFinding`,
      data
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "files");
      yield put(actions.updateFindingsSuccess("success"));
      yield put(actions.getPentestTabDetailsRequest(pentestId));
    }
  } catch (error) {
    // console.log(error.response.data.message);
    yield put(actions.updateFindingsError(error.response.data.message));
  }
}
