import { CONFIG } from "../../../Service/CONFIG";
import { put, call } from "redux-saga/effects";
import * as actions from "../../action/index";
import axios from "axios";

export function* GetPentestSaga(action) {
  try {
    const { company_id, activePageNumber, pentestStatus } = action.payload;
    let response = yield call(
      axios.get,
      `${CONFIG.pentestData}/${company_id}/${activePageNumber}?status=${pentestStatus}`
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "uuuuuu");
      yield put(actions.PentestSuccess(response?.data?.data));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.PentestError(error?.response?.data?.message));
  }
}

export function* AddPentestSaga(action) {
  try {
    let response = yield call(axios.post, CONFIG.addPentest, action.payload);
    if (response && response?.data?.status === 1) {
      console.log(response, "uuuuuu");
      yield put(actions.AddPentestSuccess("Pentest Added"));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.AddPentestError(error.response.data.message));
  }
}

export function* DeletePentestSaga(action) {
  try {
    let response = yield call(axios.delete, "/pentest/deletePentest", {
      data: {
        pentestId: action.payload,
      },
    });
    if (response && response?.data?.status === 1) {
      yield put(actions.DeletePentestSuccess("Pentest Deleted"));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.DeletePentestError(error?.response?.data?.message));
  }
}

export function* UpdatePentestSaga(action) {
  try {
    let response = yield call(
      axios.put,
      `${CONFIG.pentestDetails}/editPentest`,
      action.payload
    );
    if (response && response?.data?.status === 1) {
      yield put(actions.updatePentestSuccess("Pentest updated"));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.updatePentestError(error?.response?.data?.message));
  }
}
