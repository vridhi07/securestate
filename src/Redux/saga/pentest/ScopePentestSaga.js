import { CONFIG } from "../../../Service/CONFIG";
import { put, call } from "redux-saga/effects";
import * as actions from "../../action/index";
import axios from "axios";
export function* AddScopeSaga(action) {
  try {
    const { pentestId, data } = action.payload;
    let response = yield call(
      axios.post,
      `/pentest/${pentestId}/scope/pentestActiveScope/addNewScope`,
      data
    );
    if (response && response.data?.status === 1) {
      console.log(response, "files");
      yield put(actions.addScopeSuccess(response?.data?.data));
      yield put(actions.getPentestTabDetailsRequest(pentestId));
    }
  } catch (error) {
    // console.log(error.response.data.message);
    yield put(actions.addScopeError(error.response.data.message));
  }
}

export function* UpdateScopeSaga(action) {
  try {
    const { pentestId, data, selectedId } = action.payload;
    console.log(pentestId, selectedId, data);
    let response = yield call(
      axios.put,
      `/pentest/${pentestId}/${selectedId}/scope/pentestActiveScope/editScope`,
      data
    );
    if (response && response.data?.status === 1) {
      console.log(response, "files");
      yield put(actions.updateScopeSuccess(response?.data?.data));
      yield put(actions.getPentestTabDetailsRequest(pentestId));
    }
  } catch (error) {
    // console.log(error.response.data.message);
    yield put(actions.updateScopeError(error.response.data.message));
  }
}

export function* deleteScopeSaga(action) {
  try {
    const { pentestId, selectedId } = action.payload;
    let response = yield call(
      axios.delete,
      `/pentest/${selectedId}/deleteScope`
    );
    if (response && response.data?.status === 1) {
      console.log(response, "files");
      yield put(actions.deleteScopeSuccess(response?.data?.data));
      yield put(actions.getPentestTabDetailsRequest(pentestId));
    }
  } catch (error) {
    // console.log(error.response.data.message);
    yield put(actions.deleteScopeError(error.response.data.message));
  }
}
