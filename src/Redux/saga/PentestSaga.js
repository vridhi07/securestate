import Axios from "../../Service/axiosInstance";
import { CONFIG } from "../../Service/CONFIG";
import { put, call } from "redux-saga/effects";
import * as actions from "../action/index";

export function* GetActivePentestSaga(action) {
  console.log(action.payload);
  try {
    let response = yield call(
      Axios.get,
      `${CONFIG.pentestActive}${action.payload}`
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "uuuuuu");
      yield put(actions.ActivePentestSuccess(response.data.data));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.ActivePentestError(error.response.data.message));
  }
}

export function* GetCompletedPentestSaga(action) {
  try {
    let response = yield call(
      Axios.get,
      `${CONFIG.pentestCompleted}${action.payload}`
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "uuuuuu");
      yield put(actions.CompletedPentestSuccess(response.data.data));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.CompletedPentestError(error.response.data.message));
  }
}
export function* GetUpcomingPentestSaga(action) {
  try {
    let response = yield call(
      Axios.get,
      `${CONFIG.pentestUpcoming}${action.payload}`
    );
    if (response && response.data?.status === 1) {
      // console.log(response, "uuuuuu");
      yield put(actions.UpcomingPentestSuccess(response.data.data));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.UpcomingPentestError(error.response.data.message));
  }
}

export function* AddPentestSaga(action) {
  try {
    let response = yield call(Axios.post, CONFIG.addPentest, action.payload);
    if (response && response.data?.status === 1) {
      console.log(response, "uuuuuu");
      yield put(actions.AddPentestSuccess("Pentest Added"));
    }
  } catch (error) {
    console.log(error.response);
    yield put(actions.AddPentestError(error.response.data.message));
  }
}
