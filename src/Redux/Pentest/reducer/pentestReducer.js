import * as constant from "../constant";

const initialState = {
  isScopeModalOpen: false,
  scopeFormInput: {
    scopeTitle: "",
    scopeStatus: "",
  },
  isScopeEdit: false,
  scopeEditId: null,
  anchorEl: null,
  isScopeDeleteOpen: false,
};

export const pentestReducer = (state = initialState, action) => {
  switch (action.type) {
    case constant.OPEN_SCOPE_MODAL:
      return { ...state, isScopeModalOpen: true };
    case constant.CLOSE_SCOPE_MODAL:
      return {
        ...state,
        isScopeModalOpen: false,
        scopeFormInput: {
          ...state.scopeFormInput,
          scopeTitle: "",
          scopeStatus: "",
        },
        scopeEditId: null,
      };
    case constant.SCOPE_INPUT_CHANGE:
      const { value, name } = action.payload;
      return {
        ...state,
        scopeFormInput: { ...state.scopeFormInput, [name]: value },
      };

    case constant.OPEN_SCOPE_POPOVER:
      const { e, id } = action.payload;
      return { ...state, anchorEl: e.currentTarget, scopeEditId: id };

    case constant.CLOSE_SCOPE_POPOVER:
      return { ...state, anchorEl: null, scopeEditId: null };

    case constant.SCOPE_EDIT_CALL:
      return {
        ...state,
        isScopeModalOpen: true,

        isScopeEdit: true,
        anchorEl: null,
      };

    case constant.OPEN_DELETE_MODAL:
      return {
        ...state,
        anchorEl: null,
        isScopeDeleteOpen: true,
      };
    case constant.CLOSE_DELETE_MODAL:
      return { ...state, isScopeDeleteOpen: false, scopeEditId: null };
    default:
      return state;
  }
};
