import * as actions from "../../constant";

const initialState = {
  isUpcomingLoading: false,
  isSuccess: false,
  isError: false,
  UpcomingPentestData: [],
  UpcomingPentestMessage: "",
  ErrorMessage: "",
};

const UpcomingPentestReducer = (state = initialState, action) => {
  switch (action.type) {
    case actions.UPCOMING_PENTEST_REQUEST:
      return {
        ...state,
        isUpcomingLoading: true,
        isSuccess: false,
        isError: false,
        UpcomingPentestMessage: "",
        ErrorMessage: "",
      };

    case actions.UPCOMING_PENTEST_SUCCESS:
      return {
        ...state,
        isUpcomingLoading: false,
        isSuccess: true,
        isError: false,
        UpcomingPentestData: action.payload,
        UpcomingPentestMessage: "",
        ErrorMessage: "",
      };

    case actions.UPCOMING_PENTEST_ERROR:
      return {
        ...state,
        isUpcomingLoading: false,
        isSuccess: false,
        isError: true,
        UpcomingPentestMessage: "",
        ErrorMessage: action.payload,
      };
    case actions.ACTIVE_PENTEST_ERROR:
      return {
        ...state,
        isActiveLoading: false,
        isSuccess: false,
        isError: true,
        UpcomingPentestMessage: "",
        ErrorMessage: "",
      };

    case actions.ADD_PENTEST_REQUEST:
      return {
        ...state,
        isCompletedLoading: true,
        isError: false,
        UpcomingPentestMessage: "",
        ErrorMessage: "",
      };
    case actions.ADD_PENTEST_SUCCESS:
      return {
        ...state,
        isCompletedLoading: false,
        isError: false,
        UpcomingPentestMessage: action.payload,
        ErrorMessage: "",
      };
    case actions.ADD_PENTEST_ERROR:
      return {
        ...state,
        isCompletedLoading: false,
        isError: true,
        UpcomingPentestMessage: "",
        ErrorMessage: action.payload,
      };
    default:
      return state;
  }
};

export default UpcomingPentestReducer;
