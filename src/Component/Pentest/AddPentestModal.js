import Dialog from "@mui/material/Dialog";
import TextField from "@mui/material/TextField";
import InputLabel from "@mui/material/InputLabel";
import MenuItem from "@mui/material/MenuItem";
import FormControl from "@mui/material/FormControl";
import Select from "@mui/material/Select";
import DateAdapter from "@mui/lab/AdapterMoment";
import DesktopDatePicker from "@mui/lab/DesktopDatePicker";
import LocalizationProvider from "@mui/lab/LocalizationProvider";
import DarkButton from "../Common/DarkButton";

const AddPentestModal = ({
  addPentest,
  handleClose,
  pentest,
  handlePentestChange,
  handleStartDate,
  handleEndDate,
}) => {
  const {
    title,
    asset,
    startDate,
    endDate,
    status,
    testingEnvironment,
    clientPoc,
    clientEmail,
    scope,
  } = pentest;
  return (
    <>
      <Dialog
        open={addPentest}
        onClose={handleClose}
        aria-labelledby="responsive-dialog-title"
      >
        <form className="flex flex-col justify-center items-center px-5 sm:px-20 py-10">
          <span className="text-xl font-semibold mb-8">New Pentest</span>

          <div className="mb-3 w-full">
            <TextField
              required
              id="outlined-required"
              label="Pentext Title"
              fullWidth
              name="title"
              value={title}
              onChange={handlePentestChange}
            />
          </div>

          <div className="mb-3 w-full">
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">Asset</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={asset}
                name="asset"
                label="Asset"
                onChange={handlePentestChange}
              >
                <MenuItem value={10}>Ten</MenuItem>
                <MenuItem value={20}>Twenty</MenuItem>
                <MenuItem value={30}>Thirty</MenuItem>
              </Select>
            </FormControl>
          </div>

          <div className="mb-3 w-full">
            <LocalizationProvider dateAdapter={DateAdapter}>
              <DesktopDatePicker
                label="Start Date"
                inputFormat="DD/MM/yyyy"
                value={startDate}
                onChange={handleStartDate}
                renderInput={(params) => <TextField {...params} />}
              />
            </LocalizationProvider>
          </div>

          <div className="mb-3 w-full">
            <LocalizationProvider dateAdapter={DateAdapter}>
              <DesktopDatePicker
                label="End Date"
                inputFormat="DD/MM/yyyy"
                value={endDate}
                onChange={handleEndDate}
                renderInput={(params) => <TextField {...params} />}
              />
            </LocalizationProvider>
          </div>

          <div className="mb-3 w-full">
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">Status</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={status}
                label="Status"
                name="status"
                onChange={handlePentestChange}
                required
              >
                <MenuItem value={"Progress"}>Progress</MenuItem>
                <MenuItem value={"Scheduled"}>Scheduled</MenuItem>
                <MenuItem value={"Completed"}>Completed</MenuItem>
                <MenuItem value={"On Hold"}>On Hold</MenuItem>
                <MenuItem value={"Fix Verification"}>Fix Verification</MenuItem>
              </Select>
            </FormControl>
          </div>

          <div className="mb-3 w-full">
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">
                Testing Environment
              </InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={testingEnvironment}
                label="Testing Environment"
                name="testingEnvironment"
                onChange={handlePentestChange}
                required
              >
                <MenuItem value={"Production"}>Production</MenuItem>
                <MenuItem value={"Sandbox"}>Sandbox</MenuItem>
              </Select>
            </FormControl>
          </div>

          <div className="mb-3 w-full">
            <TextField
              required
              id="outlined-required"
              label="Client POC"
              fullWidth
              value={clientPoc}
              onChange={handlePentestChange}
              name="clientPoc"
              inputProps={{ maxLength: 30 }}
            />
          </div>

          <div className="mb-3 w-full">
            <TextField
              required
              id="outlined-required"
              label="Client Email"
              type={"email"}
              fullWidth
              value={clientEmail}
              onChange={handlePentestChange}
              name="clientEmail"
            />
          </div>

          <div className="mb-3 w-full">
            <TextField
              id="outlined-multiline-static"
              label="Scope"
              multiline
              fullWidth
              rows={4}
              value={scope}
              onChange={handlePentestChange}
              name="scope"
            />
          </div>

          <div className="flex flex-row justify-between w-full">
            <DarkButton type={"submit"} text={"Add"} />
            <DarkButton onClick={handleClose} text={"Cancel"} />
          </div>
        </form>
      </Dialog>
    </>
  );
};

export default AddPentestModal;
