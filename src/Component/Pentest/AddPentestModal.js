import Dialog from "@mui/material/Dialog";
import TextField from "@mui/material/TextField";
import InputLabel from "@mui/material/InputLabel";
import MenuItem from "@mui/material/MenuItem";
import FormControl from "@mui/material/FormControl";
import Select from "@mui/material/Select";
import AdapterDateFns from "@mui/lab/AdapterDateFns";
import DesktopDatePicker from "@mui/lab/DesktopDatePicker";
import LocalizationProvider from "@mui/lab/LocalizationProvider";
import { useSelector, useDispatch } from "react-redux";
import * as actions from "../../Redux/action/index";
import Loader from "../Common/PentestLoader";
import CloseIcon from "@mui/icons-material/Close";
import { useEffect } from "react";
import { ThemeProvider } from "@mui/material/styles";
import { InputTheme } from "../../Theme/InputTheme";

const AddPentestModal = ({
  addPentest,
  handleClose,
  pentest,
  handlePentestChange,
  handleStartDate,
  handleEndDate,
  isEdit,
  handlePentestSubmit,
}) => {
  const {
    title,
    asset,
    startDate,
    endDate,
    status,
    testingEnvironment,
    clientPoc,
    clientEmail,
    scope,
  } = pentest;

  const dispatch = useDispatch();
  const { allAsset, isLoading } = useSelector((state) => state.Assets);
  const { userDetails } = useSelector((state) => state?.user);
  const { selectedCompany } = useSelector((state) => state?.company);

  const getCompanyId = (role) => {
    if (role === "superAdmin") {
      return selectedCompany;
    }
    return userDetails?.company_id._id;
  };

  const company_id = getCompanyId(userDetails?.role);
  console.log(company_id);
  useEffect(() => {
    dispatch(actions.getAllAssetListRequest(company_id));
  }, [company_id]);

  return (
    <ThemeProvider theme={InputTheme}>
      <Dialog
        open={addPentest}
        onClose={handleClose}
        aria-labelledby="responsive-dialog-title"
      >
        {isLoading ? (
          <div className=" px-5  py-10">
            <Loader />
          </div>
        ) : (
          <form
            className="bg-primary-clr"
            onSubmit={handlePentestSubmit}
            autoComplete="off"
          >
            <header className="flex justify-between  bg-orange-cus-1 h-12 px-5 py-3">
              <h4 className="text-xl text-white  text-center font-semibold mb-8">
                {isEdit ? "Edit Pentest" : "New Pentest"}
              </h4>
              <button
                type="button"
                onClick={handleClose}
                // className="absolute top-4 right-4"
              >
                <CloseIcon sx={{ color: "white" }} />
              </button>
            </header>
            <div className="px-5 py-3">
              <section className="grid grid-cols-4 gap-8 my-2">
                <div className="md:col-span-2 col-span-4 ">
                  <div className="mb-3 w-full ">
                    <TextField
                      required
                      id="outlined-required"
                      label="Pentext Title"
                      fullWidth
                      name="title"
                      value={title}
                      onChange={handlePentestChange}
                      sx={{ bgcolor: "white" }}
                      size="small"
                    />
                  </div>
                </div>
                <div className="md:col-span-2 col-span-4">
                  <div className="mb-3 w-full">
                    <FormControl fullWidth>
                      <InputLabel id="demo-simple-select-label">
                        Asset
                      </InputLabel>
                      <Select
                        labelId="demo-simple-select-label"
                        id="demo-simple-select"
                        value={asset}
                        name="asset"
                        label="Asset"
                        onChange={handlePentestChange}
                        required
                        sx={{ bgcolor: "white" }}
                        size="small"
                      >
                        {allAsset &&
                          allAsset?.map((item) => {
                            return (
                              <MenuItem value={item.asset_name} key={item._id}>
                                {item.asset_name}
                              </MenuItem>
                            );
                          })}
                      </Select>
                    </FormControl>
                  </div>
                </div>
              </section>

              <section className="grid grid-cols-4 gap-8 my-2">
                <div className="md:col-span-2 col-span-4">
                  <div className="mb-3 w-full bg-white">
                    <LocalizationProvider dateAdapter={AdapterDateFns}>
                      <DesktopDatePicker
                        label="Start Date"
                        value={startDate}
                        minDate={new Date()}
                        onChange={handleStartDate}
                        renderInput={(params) => (
                          <TextField size="small" {...params} />
                        )}
                      />
                    </LocalizationProvider>
                  </div>
                </div>
                <div className="md:col-span-2 col-span-4">
                  <div className="mb-3 w-full bg-white">
                    <LocalizationProvider dateAdapter={AdapterDateFns}>
                      <DesktopDatePicker
                        label="End Date"
                        value={endDate}
                        minDate={startDate}
                        onChange={handleEndDate}
                        renderInput={(params) => (
                          <TextField size="small" {...params} />
                        )}
                      />
                    </LocalizationProvider>
                  </div>
                </div>
              </section>

              <section className=" grid grid-cols-4 gap-8 my-2">
                <div className="  col-span-4 md:col-span-2">
                  <div className="mb-3 w-full ">
                    <FormControl fullWidth>
                      <InputLabel id="demo-simple-select-label">
                        Status
                      </InputLabel>
                      <Select
                        labelId="demo-simple-select-label"
                        id="demo-simple-select"
                        value={status}
                        label="Status"
                        name="status"
                        onChange={handlePentestChange}
                        required
                        sx={{ bgcolor: "white" }}
                        size="small"
                      >
                        <MenuItem value={"progress"}>progress</MenuItem>
                        <MenuItem value={"scheduled"}>scheduled</MenuItem>
                        <MenuItem value={"completed"}>completed</MenuItem>
                        <MenuItem value={"active"}>active</MenuItem>
                        <MenuItem value={"upcoming"}>upcoming</MenuItem>

                        <MenuItem value={"on_hold"}>on Hold</MenuItem>
                        <MenuItem value={"fix_verification"}>
                          fix Verification
                        </MenuItem>
                      </Select>
                    </FormControl>
                  </div>
                </div>
                <div className="  md:col-span-2 col-span-4">
                  <div className="mb-3 w-full">
                    <FormControl fullWidth>
                      <InputLabel id="demo-simple-select-label">
                        Testing Environment
                      </InputLabel>
                      <Select
                        labelId="demo-simple-select-label"
                        id="demo-simple-select"
                        value={testingEnvironment}
                        label="Testing Environment"
                        name="testingEnvironment"
                        onChange={handlePentestChange}
                        required
                        sx={{ bgcolor: "white" }}
                        size="small"
                      >
                        <MenuItem value={"Production"}>Production</MenuItem>
                        <MenuItem value={"Sandbox"}>Sandbox</MenuItem>
                      </Select>
                    </FormControl>
                  </div>
                </div>
              </section>
              <section className="grid grid-cols-4 gap-8 my-2">
                <div className="md:col-span-2 col-span-4">
                  <div className="mb-3 w-full">
                    <TextField
                      required
                      id="outlined-required"
                      label="Client POC"
                      fullWidth
                      value={clientPoc}
                      onChange={handlePentestChange}
                      name="clientPoc"
                      inputProps={{ maxLength: 30 }}
                      sx={{ bgcolor: "white" }}
                      size="small"
                    />
                  </div>
                </div>
                <div className="md:col-span-2 col-span-4">
                  <div className="mb-3 w-full">
                    <TextField
                      required
                      id="outlined-required"
                      label="Client Email"
                      type={"email"}
                      fullWidth
                      value={clientEmail}
                      onChange={handlePentestChange}
                      name="clientEmail"
                      sx={{ bgcolor: "white" }}
                      size="small"
                    />
                  </div>
                </div>
              </section>

              <div className="mb-3 w-full">
                <TextField
                  id="outlined-multiline-static"
                  label="Scope"
                  multiline
                  fullWidth
                  rows={4}
                  value={scope}
                  onChange={handlePentestChange}
                  name="scope"
                  required
                  sx={{ bgcolor: "white" }}
                  size="small"
                />
              </div>
              <div className="flex items-center gap-3 w-full">
                <button
                  className="flex justify-center rounded-md items-center bg-primary-btn text-white px-5 py-3 cursor-pointer"
                  type="submit"
                >
                  {isEdit ? "Save" : "Add"}
                </button>
                <button
                  className=" border bg-white items-center  rounded-md text-gray-500 px-5 py-3 cursor-pointer"
                  type="button"
                  onClick={handleClose}
                >
                  Cancel
                </button>
              </div>
            </div>
          </form>
        )}
      </Dialog>
    </ThemeProvider>
  );
};

export default AddPentestModal;
