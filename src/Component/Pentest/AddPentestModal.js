import { useState } from "react";
import Dialog from "@mui/material/Dialog";
import TextField from "@mui/material/TextField";
import InputLabel from "@mui/material/InputLabel";
import MenuItem from "@mui/material/MenuItem";
import FormControl from "@mui/material/FormControl";
import Select from "@mui/material/Select";
import DateAdapter from "@mui/lab/AdapterMoment";
import DesktopDatePicker from "@mui/lab/DesktopDatePicker";
import LocalizationProvider from "@mui/lab/LocalizationProvider";
import DarkButton from "../Common/DarkButton";

const AddPentestModal = ({ addPentest, setAddPentest }) => {
  const handleClose = () => {
    setAddPentest(false);
  };

  const [pentest, setPentest] = useState({
    title: "",
    asset: "",
    startDate: new Date(),
    endDate: new Date(),
    status: "",
    testingEnvironment: "",
    clientPoc: "",
    clientEmail: "",
    scope: "",
  });

  return (
    <>
      <Dialog
        open={addPentest}
        onClose={handleClose}
        aria-labelledby="responsive-dialog-title"
      >
        <div className="flex flex-col justify-center items-center px-5 sm:px-20 py-10">
          <span className="text-xl font-semibold mb-8">New Pentest</span>

          <div className="mb-3 w-full">
            <TextField
              required
              id="outlined-required"
              label="Pentext Title"
              fullWidth
              value={pentest.title}
            />
          </div>

          <div className="mb-3 w-full">
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">Asset</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={pentest.asset}
                label="Asset"
                // onChange={handleChange}
              >
                <MenuItem value={10}>Ten</MenuItem>
                <MenuItem value={20}>Twenty</MenuItem>
                <MenuItem value={30}>Thirty</MenuItem>
              </Select>
            </FormControl>
          </div>

          <div className="mb-3 w-full">
            <LocalizationProvider dateAdapter={DateAdapter}>
              <DesktopDatePicker
                label="Start Date"
                inputFormat="DD/MM/yyyy"
                value={pentest.startDate}
                // onChange={handleChange}
                renderInput={(params) => <TextField {...params} />}
              />
            </LocalizationProvider>
          </div>

          <div className="mb-3 w-full">
            <LocalizationProvider dateAdapter={DateAdapter}>
              <DesktopDatePicker
                label="End Date"
                inputFormat="DD/MM/yyyy"
                value={pentest.endDate}
                // onChange={handleChange}
                renderInput={(params) => <TextField {...params} />}
              />
            </LocalizationProvider>
          </div>

          <div className="mb-3 w-full">
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">Status</InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={pentest.status}
                label="Status"
                // onChange={handleChange}
              >
                <MenuItem value={10}>Ten</MenuItem>
                <MenuItem value={20}>Twenty</MenuItem>
                <MenuItem value={30}>Thirty</MenuItem>
              </Select>
            </FormControl>
          </div>

          <div className="mb-3 w-full">
            <FormControl fullWidth>
              <InputLabel id="demo-simple-select-label">
                Testing Environment
              </InputLabel>
              <Select
                labelId="demo-simple-select-label"
                id="demo-simple-select"
                value={pentest.testingEnvironment}
                label="Testing Environment"
                // onChange={handleChange}
              >
                <MenuItem value={10}>Ten</MenuItem>
                <MenuItem value={20}>Twenty</MenuItem>
                <MenuItem value={30}>Thirty</MenuItem>
              </Select>
            </FormControl>
          </div>

          <div className="mb-3 w-full">
            <TextField
              required
              id="outlined-required"
              label="Client POC"
              fullWidth
              value={pentest.clientPoc}
            />
          </div>

          <div className="mb-3 w-full">
            <TextField
              required
              id="outlined-required"
              label="Client Email"
              fullWidth
              value={pentest.clientEmail}
            />
          </div>

          <div className="mb-3 w-full">
            <TextField
              id="outlined-multiline-static"
              label="Scope"
              multiline
              fullWidth
              rows={4}
              value={pentest.scope}
            />
          </div>

          <div className="flex flex-row justify-between w-full">
            <DarkButton text={"Add"} />
            <DarkButton onClick={handleClose} text={"Cancel"} />
          </div>
        </div>
      </Dialog>
    </>
  );
};

export default AddPentestModal;
