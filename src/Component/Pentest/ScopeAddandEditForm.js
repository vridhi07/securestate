import TextField from "@mui/material/TextField";
import Dialog from "@mui/material/Dialog";
import DialogActions from "@mui/material/DialogActions";
import DialogContent from "@mui/material/DialogContent";
import Select from "@mui/material/Select";
import MenuItem from "@mui/material/MenuItem";
import DialogTitle from "@mui/material/DialogTitle";
import InputLabel from "@mui/material/InputLabel";
import FormControl from "@mui/material/FormControl";
// import { useSelector, useDispatch } from "react-redux";
// import * as pentestAction from "../../Redux/Pentest/actions/pentestActions";
import DarkGrayButton from "../Common/DarkGrayButton";
import GrayButton from "../Common/GrayButton";
import CloseIcon from "@mui/icons-material/Close";
export default function ScopeAddForm({
  isScopeModal,
  scopeForm,
  handleScopeForm,
  closeFormModal,
  isEdit,
  handleSubmit,
}) {
  return (
    <div>
      <Dialog open={isScopeModal}>
        <form
          className="relative w-full bg-primary-clr md:w-500"
          onSubmit={handleSubmit}
          autoComplete="off"
        >
          <div className="item-center flex justify-between bg-orange-cus-1 px-4">
            <DialogTitle sx={{ textAlign: "center", color: "white" }}>
              {isEdit ? "Edit Scope" : "New Scope"}
            </DialogTitle>
            <button
              type="button"
              onClick={closeFormModal}
              // className="absolute top-4 right-4"
            >
              <CloseIcon sx={{ color: "white" }} />
            </button>
          </div>
          <div>
            <DialogContent>
              <TextField
                autoFocus
                margin="dense"
                id="scopeTitle"
                type="text"
                label="Scope Title"
                fullWidth
                variant="outlined"
                name="scopeTitle"
                value={scopeForm.scopeTitle}
                onChange={handleScopeForm}
                required
                sx={{ backgroundColor: "white" }}
              />

              <div className="mt-4 w-full">
                <FormControl fullWidth>
                  <InputLabel id="ScopeStatus">Status</InputLabel>
                  <Select
                    labelId="ScopeStatus"
                    id="ScopeStatus"
                    label="Status"
                    name="scopeStatus"
                    sx={{ width: "100%" }}
                    value={scopeForm.scopeStatus}
                    onChange={handleScopeForm}
                    sx={{ backgroundColor: "white" }}
                  >
                    <MenuItem value={"In Progress"}>In Progress</MenuItem>
                    <MenuItem value={"Not started"}>Not started</MenuItem>
                    <MenuItem value={"Blocked and N/A"}>
                      Blocked and N/A
                    </MenuItem>
                  </Select>
                </FormControl>
              </div>

              <DialogActions
                sx={{
                  mt: "1rem",
                  ml: 0,
                  display: "flex",
                  p: 0,
                  justifyContent: "space-between",
                }}
              >
                <button className="rounded-md bg-gray-cus-5 px-14 py-2 tracking-wide text-white">
                  {isEdit ? "Save" : "Add"}
                </button>
                <button
                  type="button"
                  className="rounded-md bg-slate-300 px-6 py-2 tracking-wider text-gray-500"
                  onClick={closeFormModal}
                >
                  cancel
                </button>
              </DialogActions>
            </DialogContent>
          </div>
        </form>
      </Dialog>
    </div>
  );
}
