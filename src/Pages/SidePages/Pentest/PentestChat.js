import SingleChat from "../../../Component/Pentest/SingleChat";
import SendIcon from "@mui/icons-material/Send";
import { useEffect, useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { useLocation } from "react-router-dom";
import * as action from "../../../Redux/action";
const PentestChat = () => {
  const array = Array.from({ length: 10 }, (_, index) => index);

  const [chatData, setChatData] = useState("");

  const dispatch = useDispatch();
  const location = useLocation();
  const pentestId = location?.state?.id;
  // console.log(pentestId);
  const { chat, isLoading } = useSelector((state) => state?.pentestChat);
  useEffect(() => {
    dispatch(action.pentestChatRequest(pentestId));
    // const interval = setInterval(() => {
    //   dispatch(action.pentestChatRequest(pentestId));
    // }, 10000);

    // return () => clearInterval(interval);
  }, []);

  const handleSubmit = (e) => {
    e.preventDefault();
    // console.log("added");
    dispatch(action.sendChatRequest({ pentestId, chat: chatData }));
    setChatData("");
  };

  return (
    <div className="  h-[calc(100vh-10rem)] mt-14 relative border-2 rounded-md">
      <div className=" h-[calc(100vh-15rem)] overflow-y-auto">
        <div className="min-h-full flex-col flex justify-end mb-3">
          {chat &&
            chat.map((item, index) => {
              return (
                <SingleChat
                  //  ref={scrollRef}
                  key={item._id}
                  item={item}
                  index={index}
                />
              );
            })}
        </div>
      </div>
      <div className="absolute bottom-0 left-0 right-0  h-[5rem]  ">
        <form
          className="w-[85%] h-full  mx-auto relative"
          onSubmit={handleSubmit}
        >
          <textarea
            rows={3}
            className=" w-[85%] absolute top-0 bottom-1 right-16 resize-none py-2 px-3 focus:outline-none border-2 border-gray-300 rounded-md placeholder:text-gray-500 "
            placeholder="Type Message here !!"
            value={chatData}
            onChange={(e) => setChatData(e.target.value)}
            required
          ></textarea>
          <button type="submit" className=" absolute top-4 right-4">
            <SendIcon sx={{ fontSize: "2.75rem", color: "#75A9F9" }} />
          </button>
        </form>
      </div>
    </div>
  );
};

export default PentestChat;
